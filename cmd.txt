Commandes GIT de base
Git config
L’une des commandes git les plus utilisées est git config. On l’utilise pour configurer les préférences de l’utilisateur : son adresse email, l’algorithme utilisé pour diff, le nom d’utilisateur et le format de fichier etc. Par exemple, la commande suivante peut être utilisée pour définir le mail d’un utilisateur:
git config --global user.email sam@google.com
Git init
Cette commande est utilisée pour créer un nouveau dépôt GIT :
git init
Git add
La commande git add peut être utilisée pour ajouter des fichiers à l’index. Par exemple, la commande suivante ajoutera un fichier nommé temp.txt dans le répertoire local de l’index:
git add temp.txt
Git clone
La commande git clone est utilisée pour la vérification des dépôts. Si le dépôt se trouve sur un serveur distant, utilisez:
git clone alex@93.188.160.58:/chemin/vers/dépôt
Inversement, si une copie de travail d’un dépôt local doit être créée, utilisez:
git clone /chemin/vers/dépôt
Git commit
La commande git commit permet de valider les modifications apportées au HEAD. Notez que tout commit ne se fera pas dans le dépôt distant.
git commit –m “Description du commit”
Git status
La commande git status affiche la liste des fichiers modifiés ainsi que les fichiers qui doivent encore être ajoutés ou validés. Usage:
git status
Git push
Git push est une autre commandes GIT de base. Un simple push envoie les modifications locales apportées à la branche principale associée :
git push origin master
Git checkout
La commande git checkout peut être utilisée pour créer des branches ou pour basculer entre elles. Par exemple nous allons créer une branche:
command git checkout -b <nom-branche>
Pour passer simplement d’une branche à une autre, utilisez:
git checkout <nom-branche>
Git remote
Cette commande remote permet à un utilisateur de se connecter à un dépôt distant. La commande suivante répertorie les dépôts distants actuellement configurés:
git remote –v
Cette commande permet à l’utilisateur de connecter le dépôt local à un serveur distant:
git remote add origin <93.188.160.58>
Branche git
La commande git branch peut être utilisée pour gérer les branches Git. Pour lister toutes les branches présentes dans le dépôt, utilisez:
git branch
Pour supprimer une branche:
git branch –d <nom-branche>
Git pull
Pour fusionner toutes les modifications présentes sur le dépôt distant dans le répertoire de travail local, la commande pull est utilisée. Usage:
git pull
Git merge
La commande git merge est utilisée pour fusionner une branche dans la branche active. Usage:
git merge <nom-branche>
Et voilà ce que j'ai ajouté depuis pc_maison .
